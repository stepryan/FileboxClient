package filebox;


/**
* filebox/_serviceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ../filebox.idl
* Tuesday, April 2, 2013 6:42:25 PM BST
*/

public class _serviceStub extends org.omg.CORBA.portable.ObjectImpl implements filebox.service
{

  public int addUser (String username, String password)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addUser", true);
                $out.write_string (username);
                $out.write_string (password);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addUser (username, password        );
            } finally {
                _releaseReply ($in);
            }
  } // addUser

  public filebox.user getUser (int id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getUser", true);
                $out.write_long (id);
                $in = _invoke ($out);
                filebox.user $result = filebox.userHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getUser (id        );
            } finally {
                _releaseReply ($in);
            }
  } // getUser

  public int login (String username, String password)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("login", true);
                $out.write_string (username);
                $out.write_string (password);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return login (username, password        );
            } finally {
                _releaseReply ($in);
            }
  } // login

  public int addFile (String name, String content, int status, int userid)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addFile", true);
                $out.write_string (name);
                $out.write_string (content);
                $out.write_long (status);
                $out.write_long (userid);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addFile (name, content, status, userid        );
            } finally {
                _releaseReply ($in);
            }
  } // addFile

  public filebox.file getFile (String filename, int uid)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getFile", true);
                $out.write_string (filename);
                $out.write_long (uid);
                $in = _invoke ($out);
                filebox.file $result = filebox.fileHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getFile (filename, uid        );
            } finally {
                _releaseReply ($in);
            }
  } // getFile

  public filebox.file[] getFiles (int userid)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getFiles", true);
                $out.write_long (userid);
                $in = _invoke ($out);
                filebox.file $result[] = filebox.filesHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getFiles (userid        );
            } finally {
                _releaseReply ($in);
            }
  } // getFiles

  public filebox.file changeFileStatus (String filelist, short fileid, short filestatus)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("changeFileStatus", true);
                $out.write_string (filelist);
                $out.write_short (fileid);
                $out.write_short (filestatus);
                $in = _invoke ($out);
                filebox.file $result = filebox.fileHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return changeFileStatus (filelist, fileid, filestatus        );
            } finally {
                _releaseReply ($in);
            }
  } // changeFileStatus

  public filebox.file fileUpdate (String filelist, int lastchanged, short fileid, filebox.listener callback)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("fileUpdate", true);
                $out.write_string (filelist);
                $out.write_long (lastchanged);
                $out.write_short (fileid);
                filebox.listenerHelper.write ($out, callback);
                $in = _invoke ($out);
                filebox.file $result = filebox.fileHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return fileUpdate (filelist, lastchanged, fileid, callback        );
            } finally {
                _releaseReply ($in);
            }
  } // fileUpdate

  public void removeFile (short fileid)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("removeFile", true);
                $out.write_short (fileid);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                removeFile (fileid        );
            } finally {
                _releaseReply ($in);
            }
  } // removeFile

  public void register (filebox.listener lt)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("register", true);
                filebox.listenerHelper.write ($out, lt);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                register (lt        );
            } finally {
                _releaseReply ($in);
            }
  } // register

  public filebox.status getStatus ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getStatus", true);
                $in = _invoke ($out);
                filebox.status $result = filebox.statusHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getStatus (        );
            } finally {
                _releaseReply ($in);
            }
  } // getStatus

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:filebox/service:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _serviceStub
