package filebox;


/**
* filebox/servicePOATie.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from filebox.idl
* 03 April 2013 20:38:14 o'clock IST
*/

public class servicePOATie extends servicePOA
{

  // Constructors

  public servicePOATie ( filebox.serviceOperations delegate ) {
      this._impl = delegate;
  }
  public servicePOATie ( filebox.serviceOperations delegate , org.omg.PortableServer.POA poa ) {
      this._impl = delegate;
      this._poa      = poa;
  }
  public filebox.serviceOperations _delegate() {
      return this._impl;
  }
  public void _delegate (filebox.serviceOperations delegate ) {
      this._impl = delegate;
  }
  public org.omg.PortableServer.POA _default_POA() {
      if(_poa != null) {
          return _poa;
      }
      else {
          return super._default_POA();
      }
  }
  public int addUser (String username, String password)
  {
    return _impl.addUser(username, password);
  } // addUser

  public filebox.user getUser (int id)
  {
    return _impl.getUser(id);
  } // getUser

  public int login (String username, String password)
  {
    return _impl.login(username, password);
  } // login

  public int addFile (String name, String content, int status, int userid)
  {
    return _impl.addFile(name, content, status, userid);
  } // addFile

  public filebox.file getFile (String filename, int uid)
  {
    return _impl.getFile(filename, uid);
  } // getFile

  public filebox.file changeFileStatus (String filelist, short fileid, short filestatus)
  {
    return _impl.changeFileStatus(filelist, fileid, filestatus);
  } // changeFileStatus

  public filebox.file fileUpdate (String filelist, int lastchanged, short fileid, filebox.listener callback)
  {
    return _impl.fileUpdate(filelist, lastchanged, fileid, callback);
  } // fileUpdate

  public filebox.file[] getFiles (int uid, String content, String filename)
  {
    return _impl.getFiles(uid, content, filename);
  } // getFiles

  public void removeFile (short fileid)
  {
    _impl.removeFile(fileid);
  } // removeFile

  public void register (filebox.listener lt)
  {
    _impl.register(lt);
  } // register

  public filebox.status getStatus ()
  {
    return _impl.getStatus();
  } // getStatus

  public filebox.file addFileBinary (org.omg.CORBA.Any contentbinary, String filename, short fileid, short filestatus)
  {
    return _impl.addFileBinary(contentbinary, filename, fileid, filestatus);
  } // addFileBinary

  private filebox.serviceOperations _impl;
  private org.omg.PortableServer.POA _poa;

} // class servicePOATie
